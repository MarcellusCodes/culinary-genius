import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>CulinaryGenius</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="grid h-screen w-full place-items-center bg-primary">
        <div className="relative z-10 flex flex-col items-center justify-center gap-12">
          <h1 className="text-center text-6xl font-bold text-secondary">
            Generating dream recipes <br /> using AI for everyone
          </h1>
          <p className="text-center text-xl text-secondary text-opacity-80">
            Take a picture, write your own, or through ingredients and see how
            it will generate a complete step by step recipe for you.
          </p>
          <Link
            href="/generate-recipe"
            className=" inline-block rounded-md bg-secondary py-3 px-6 text-lg text-white"
          >
            Generate Recipe
          </Link>
        </div>
      </header>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
